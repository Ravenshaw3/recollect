version: '3.8'
services:
  api:
    build: 
      context: ./Recollect.Api
      dockerfile: Dockerfile.dockerfile
    ports:
      - "7001:80"
      - "7002:443"  # HTTPS port
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:80;https://+:443
      - ConnectionStrings__DefaultConnection=Host=db;Database=Recollect;Username=postgres;Password=${POSTGRES_PASSWORD:-secret}
      - ASPNETCORE_Kestrel__Certificates__Default__Password=${SSL_CERT_PASSWORD:-}
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - recollect-network
    volumes:
      - ./ssl:/https:ro  # SSL certificates
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16
    environment:
      POSTGRES_DB: Recollect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - recollect-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - recollect-network

volumes:
  postgres_data:

networks:
  recollect-network:
    driver: bridge
